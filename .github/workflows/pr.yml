name: pr

on:
  pull_request:

env:
  CARGO_TERM_COLOR: always
  GLEAM_VERSION: '1.10.0'

jobs:
  changes:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: read
    outputs:
      rust: ${{ steps.filter.outputs.rust }}
      gleam: ${{ steps.filter.outputs.gleam }}
      workflows: ${{ steps.filter.outputs.workflows }}
      yml: ${{ steps.filter.outputs.yml }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            gleam:
              - "src/server/client/**"
              - ".github/actions/**/*.yml"
              - ".github/workflows/pr.yml"
            rust:
              - "src/**"
              - "**/*.rs"
              - Cargo.*
              - clippy.toml
              - dist-workspace.toml
              - rust-toolchain.toml
              - ".github/actions/**/*.yml"
              - ".github/workflows/pr.yml"
            workflows:
              - ".github/**/*.yml"
            yml:
              - "**.yml"
              - "**.yaml"

  lint-rust:
    needs: changes
    if: ${{ needs.changes.outputs.rust == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          components: clippy, rustfmt
      - name: Check formatting
        run: cargo fmt --all -- --check
      - name: Lint
        run: cargo clippy

  build-rust:
    needs: changes
    if: ${{ needs.changes.outputs.rust == 'true' }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - name: Install toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1
      - name: Build
        run: cargo build

  lint-gleam:
    needs: changes
    if: ${{ needs.changes.outputs.gleam == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: erlef/setup-beam@v1
        with:
          otp-version: "27.1"
          gleam-version: ${{ env.GLEAM_VERSION }}
          rebar3-version: "3"
      - name: Compile gleam to js
        run: |
          cd src/server/client
          gleam format src --check

  build-gleam:
    needs: changes
    if: ${{ needs.changes.outputs.gleam == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Ensure dev flag is set to False
        run: |
          if grep -q "const dev = True" src/server/client/src/effects.gleam; then
            echo "dev flag is set to True"
            false
          fi
      - uses: erlef/setup-beam@v1
        with:
          otp-version: "27.1"
          gleam-version: ${{ env.GLEAM_VERSION }}
          rebar3-version: "3"
      - name: Compile gleam to js
        run: |
          cd src/server/client
          gleam run -m lustre/dev build app
      - name: Ensure compiled files haven't changed
        run: |
          if git --no-pager diff --name-only | grep -q "priv/static"; then
            echo "compiled files have changed; compile them again"
            git --no-pager diff --name-only
            false
          fi

  preview:
    needs: changes
    if: ${{ needs.changes.outputs.gleam == 'true' }}
    runs-on: ubuntu-latest
    environment: preview
    timeout-minutes: 10
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
      - name: Deploy
        uses: ./.github/actions/deploy-on-vercel
        with:
          environment: preview
          gleam_version: ${{ env.GLEAM_VERSION }}
          vercel_org_id: ${{ secrets.VERCEL_ORG_ID }}
          vercel_project_id: ${{ secrets.VERCEL_PROJECT_ID }}
          vercel_token: ${{ secrets.VERCEL_TOKEN }}
